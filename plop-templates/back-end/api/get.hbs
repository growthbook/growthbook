import { z } from "zod";
import { Api{{pascalCase object}}Interface } from "../../../types/api";
import { get{{pascalCase object}}ById } from "../../models/{{pascalCase object}}Model";
import { to{{pascalCase object}}ApiInterface } from "../../services/{{kebabCase object}}";
import { createApiRequestHandler } from "../../util/handler";

export const get{{pascalCase object}} = createApiRequestHandler({
  paramsSchema: z
    .object({
      id: z.string(),
    })
    .strict(),
})(
  async (req): Promise<{ {{camelCase object}}: Api{{pascalCase object}}Interface }> => {
    const {{camelCase object}} = await get{{pascalCase object}}ById(
      req.params.id,
      req.organization.id
    );
    if (!{{camelCase object}}) {
      throw new Error("Could not find {{camelCase object}} with that id");
    }

    return {
      {{camelCase object}}: to{{pascalCase object}}ApiInterface(req.organization, {{camelCase object}}),
    };
  }
);
