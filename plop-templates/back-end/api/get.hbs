import { z } from "zod";
import { Get{{pascalCase object}}Response } from "../../../types/openapi";
import { 
  find{{pascalCase object}}ById, 
  to{{pascalCase object}}ApiInterface 
} from "../../models/{{pascalCase object}}Model";
import { createApiRequestHandler } from "../../util/handler";

export const get{{pascalCase object}} = createApiRequestHandler({
  paramsSchema: z
    .object({
      id: z.string(),
    })
    .strict(),
})(
  async (req): Promise<Get{{pascalCase object}}Response> => {
    const {{camelCase object}} = await find{{pascalCase object}}ById(
      req.params.id,
      req.organization.id
    );
    if (!{{camelCase object}}) {
      throw new Error("Could not find {{camelCase object}} with that id");
    }

    return {
      {{camelCase object}}: to{{pascalCase object}}ApiInterface({{camelCase object}}),
    };
  }
);
