import { MetricInterface } from "../../../types/metric";
import { ExperimentInterface } from "../../../types/experiment";

export const metrics: Record<string, MetricInterface> = {};
export const experiments: Record<string, ExperimentInterface> = {};

metrics["signups"] = {
  id: "met_s1",
  organization: "org_1234",
  name: "Sign Ups",
  owner: "Bryce",
  dateCreated: new Date("2023-01-01"),
  dateUpdated: new Date("2023-04-14"),
  queries: [],
  runStarted: new Date("2023-01-01"),
  cap: 0,
  column: "",
  conditions: [],
  conversionWindowHours: 72,
  earlyStart: false,
  ignoreNulls: false,
  inverse: false,
  loseRisk: 0.0125,
  maxPercentChange: 0.5,
  minSampleSize: 150,
  sql: "SELECT user_id, anonymous_id, received_at as timestamp FROM signup",
  table: "",
  tags: [],
  timestampColumn: "",
  type: "binomial",
  winRisk: 0.0025,
  description: "",
  datasource: "warehouse",
};

metrics["revenue"] = {
  userIdTypes: ["anonymous_id", "user_id"],
  tags: [],
  id: "met_r1",
  organization: "org_1234",
  owner: "Bryce",
  datasource: "warehouse",
  name: "revenue",
  description: "",
  type: "revenue",
  table: "",
  column: "",
  inverse: false,
  ignoreNulls: false,
  cap: 0,
  denominator: "",
  conversionWindowHours: 72,
  conversionDelayHours: 2.5,
  sql:
    "SELECT\n  userid user_id,\n  anonymousid anonymous_id,\n  timestamp,\n  amount as value\nFROM\n  orders",
  aggregation: "",
  queryFormat: "sql",
  status: "active",
  userIdColumns: {
    user_id: "user_id",
    anonymous_id: "anonymous_id",
  },
  timestampColumn: "",
  conditions: [],
  winRisk: 0.0025,
  loseRisk: 0.0125,
  maxPercentChange: 0.5,
  minPercentChange: 0.005,
  minSampleSize: 150,
  dateCreated: new Date("2023-01-01"),
  dateUpdated: new Date("2023-04-14"),
  queries: [],
  runStarted: new Date("2023-01-01"),
  projects: [],
  regressionAdjustmentDays: 14,
  regressionAdjustmentEnabled: false,
  regressionAdjustmentOverride: false,
};

metrics["revenue2"] = {
  ...metrics["revenue"],
  id: "met_r2",
};

metrics["conversions"] = {
  userIdTypes: ["anonymous_id", "user_id"],
  tags: [],
  id: "met_c1",
  organization: "org_1234",
  owner: "Bryce",
  datasource: "warehouse",
  name: "conversions (from revenue)",
  description: "",
  type: "binomial",
  table: "",
  column: "",
  inverse: false,
  ignoreNulls: false,
  cap: 0,
  denominator: "met_r1",
  conversionWindowHours: 72,
  conversionDelayHours: 0,
  sql:
    "SELECT\n  userid user_id,\n  anonymousid anonymous_id,\n  timestamp\nFROM\n  orders",
  aggregation: "",
  queryFormat: "sql",
  status: "active",
  userIdColumns: {
    user_id: "user_id",
    anonymous_id: "anonymous_id",
  },
  timestampColumn: "",
  conditions: [],
  winRisk: 0.002,
  loseRisk: 0.0215,
  maxPercentChange: 0.5,
  minPercentChange: 0.005,
  minSampleSize: 150,
  dateCreated: new Date("2023-01-01"),
  dateUpdated: new Date("2023-04-14"),
  queries: [],
  runStarted: new Date("2023-01-01"),
  projects: ["prj_1"],
  regressionAdjustmentDays: 14,
  regressionAdjustmentEnabled: true,
  regressionAdjustmentOverride: false,
};

metrics["testvar"] = {
  userIdTypes: ["anonymous_id", "user_id"],
  tags: [],
  projects: ["prj_1", "prj_2"],
  id: "met_t1",
  organization: "org_1234",
  owner: "Bryce",
  datasource: "warehouse",
  name: "testvar",
  description: "",
  type: "revenue",
  dateCreated: new Date("2023-01-01"),
  dateUpdated: new Date("2023-04-14"),
  queries: [],
  runStarted: new Date("2023-01-01"),
  table: "",
  column: "",
  inverse: false,
  ignoreNulls: false,
  cap: 0,
  denominator: "met_c1",
  conversionWindowHours: 72,
  conversionDelayHours: 0,
  sql:
    "SELECT\n  userid user_id,\n  anonymousid anonymous_id,\n  1 value,\n  timestamp\nFROM\n  orders",
  aggregation: "COUNT(value) + 1",
  queryFormat: "sql",
  status: "active",
  userIdColumns: {
    user_id: "user_id",
    anonymous_id: "anonymous_id",
  },
  timestampColumn: "",
  conditions: [],
  winRisk: 0.0025,
  loseRisk: 0.0225,
  maxPercentChange: 0.5,
  minPercentChange: 0.005,
  minSampleSize: 150,
  regressionAdjustmentDays: 8,
  regressionAdjustmentEnabled: true,
  regressionAdjustmentOverride: true,
};

metrics["testvar2"] = {
  ...metrics["testvar"],
  aggregation: undefined,
};

experiments["exp1"] = {
  id: "exp_1",
  tags: ["foo"],
  activationMetric: "",
  metrics: ["met_s1", "met_r1", "met_t1"],
  archived: false,
  metricOverrides: [
    {
      id: "met_c1",
      conversionDelayHours: 2,
      regressionAdjustmentDays: 12,
      regressionAdjustmentOverride: true,
      regressionAdjustmentEnabled: true,
    },
    {
      id: "met_r1",
      regressionAdjustmentOverride: true,
      regressionAdjustmentEnabled: true,
      regressionAdjustmentDays: 8,
    },
    {
      id: "met_r2",
      regressionAdjustmentOverride: true,
      regressionAdjustmentEnabled: false,
      regressionAdjustmentDays: 8,
    },
    {
      id: "met_t1",
      regressionAdjustmentOverride: true,
      regressionAdjustmentEnabled: true,
      regressionAdjustmentDays: 12,
      winRisk: 0.0015,
      loseRisk: 0.0225,
    },
  ],
  guardrails: [],
  organization: "org_1234",
  project: "prj_1",
  owner: "Bryce",
  trackingKey: "checkout-layout",
  datasource: "warehouse",
  exposureQueryId: "user_id",
  name: "checkout-layout",
  phases: [
    {
      variationWeights: [0.34, 0.33, 0.33],
      coverage: 1,
      dateStarted: new Date("2023-01-01"),
      reason: "",
      name: "Main",
      condition: "",
      seed: "checkout-layout",
      namespace: {
        enabled: false,
        name: "",
        range: [0, 1],
      },
    },
  ],
  releasedVariationId: "0",
  description: "Testing the description field",
  hypothesis: "",
  segment: "",
  queryFilter: "",
  skipPartialData: false,
  attributionModel: "firstExposure",
  variations: [
    {
      name: "Control",
      screenshots: [
        {
          path: "http://localhost:3100/upload/org_1234/2023-04/img_1234.jpg",
          description: "",
        },
      ],
      description: "",
      key: "0",
      id: "0",
    },
    {
      name: "Button on top",
      screenshots: [],
      description: "This is a description",
      key: "1",
      id: "2",
    },
    {
      name: "Button on left",
      screenshots: [],
      description: "",
      key: "2",
      id: "1",
    },
  ],
  implementation: "code",
  status: "running",
  analysis: "",
  autoAssign: false,
  previewURL: "",
  targetURLRegex: "",
  ideaSource: "",
  dateCreated: new Date("2023-01-01"),
  dateUpdated: new Date("2023-04-14"),
  autoSnapshots: true,
  lastSnapshotAttempt: new Date("2023-04-14"),
  nextSnapshotAttempt: new Date("2023-04-15"),
  hashAttribute: "id",
  regressionAdjustmentEnabled: true,
  // sequentialTestingEnabled: true,
  // sequentialTestingTuningParameter: 1200,
};
